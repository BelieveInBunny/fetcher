kind: pipeline
name: compliance
type: docker

steps:
    -   name: linter
        image: node:12-alpine
        commands:
            - apk add git tar
            - npm i --quiet --no-save --no-optional --no-audit
            - npm run lint

trigger:
    event:
        exclude:
            - cron
            - promote

---
kind: pipeline
name: tests
type: docker

steps:
    -   name: tests
        image: node:12-alpine
        commands:
            - apk add git tar
            - npm i --quiet --no-save --no-optional --no-audit
            - npm run test

trigger:
    event:
        exclude:
            - cron
            - promote

---
kind: pipeline
name: dependencies
type: docker

steps:
    -   name: audit
        image: node:12-alpine
        commands:
            - npm audit
        depends_on: [ clone ]
    -   name: outdated
        image: node:12-alpine
        commands:
            - apk add git tar
            - npm i --quiet --no-save --no-optional --no-audit
            - npm run check-outdated
        depends_on: [ clone ]

trigger:
    branch:
        - master
    event:
        exclude:
            - promote

---
kind: pipeline
name: artifacts
type: docker

steps:
    -   name: collect
        image: node:12-alpine
        commands:
            - apk add build-base git tar
            - npm i --quiet --no-save --no-audit --production
    -   name: upload
        image: plugins/s3-cache
        settings:
            rebuild: true
            path: artifacts/${DRONE_REPO_NAME}/${DRONE_COMMIT}/
            mount:
                - node_modules
            access_key:
                from_secret: aws_access_key_id
            secret_key:
                from_secret: aws_secret_access_key
            endpoint:
                from_secret: aws_endpoint
        when:
            target:
                - production
    -   name: flush
        image: plugins/s3-cache
        settings:
            flush: true
            flush_age: 14
            flush_path: artifacts/${DRONE_REPO_NAME}/
            access_key:
                from_secret: aws_access_key_id
            secret_key:
                from_secret: aws_secret_access_key
            endpoint:
                from_secret: aws_endpoint
        when:
            target:
                - production

trigger:
    event:
        - promote
